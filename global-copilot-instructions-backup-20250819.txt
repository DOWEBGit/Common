// Backup del file global-copilot-instructions.md al 2025-08-19

# Linee guida di sviluppo PHP/JS (Progetti)

## 1. Regole generali per i file PHP
- Ogni file PHP deve iniziare con:
  ```php
  <?php
  declare(strict_types=1);
  ```
- Il server supporta PHP 8.4 → privilegiare codice moderno e performante.
- Per recuperare lo stream di input:
    - Non usare:
      ```php
      $input = file_get_contents('php://input');
      ```
    - Usare invece:
      ```php
      $input = $_POST["INPUTSTREAM"];
      ```

## 2. Struttura di progetto
- Cartelle principali: Model, Controller, Action, View, Common
- Model: entità dominio, 1:1 con tabelle DB, generati da CodeGenerator, non modificare a mano.
- Controller: uno per ogni entità, estende BaseController, sempre OnSave/OnDelete.

**Esempio Controller:**
```php
class About extends \Common\Base\BaseController {
    public static function OnSave(?\Common\Base\BaseModel $about = null): string { return ""; }
    public static function OnDelete(?\Common\Base\BaseModel $baseModel = null): string { return ""; }
}
```

## 3. Gestione input nei form
- Ogni input deve avere id e name coerenti con la proprietà del model.
- Per salvare valori:
  - Standard: `TempWrite("nomeInput", document.getElementById("nomeInput").value);`
  - File: vedi esempio FileReader.
  - Tutti: `TempWriteAllId();`

**Esempio input file:**
```javascript
const fileInput = document.getElementById("inputFile");
const file = fileInput.files[0];
const reader = new FileReader();
reader.onload = function(e) {
    TempWrite("inputFile", btoa(e.target.result));
};
reader.readAsBinaryString(file);
```

## 4. Flusso View → Action → Controller
- La funzione Action chiama una funzione della classe Action\NomeClasse.
- L’action legge i dati con TempRead e li passa al controller.

**Esempio chiamata:**
```javascript
Action("Province", "Inserisci", function() {
    let message = TempRead("message");
    if (message !== '') TempReadAllId(message);
    else { alert("Provincia inserita con successo!"); ReloadViewAll(); }
});
```

**Esempio Action/Province.php:**
```php
public function Inserisci(): void {
    $Titolo = \Common\State::TempRead("Titolo");
    $saveResponse = \Controller\Province::InserisciProvincia($Titolo);
    // gestione risposta
}
```

**Esempio Controller/Province.php:**
```php
public static function InserisciProvincia(string $Titolo): \Common\Response\SaveResponse {
    $provincia = new \Model\Province();
    $provincia->Titolo = $Titolo;
    return $provincia->Save();
}
```

## 5. Coerenza nomi input ↔ proprietà
- id e name degli input devono corrispondere al nome della proprietà del model/controller.

**Esempio:**
```html
<input type="text" id="Titolo" name="Titolo" />
```

## 6. Editor riutilizzabili (Inserimento/Modifica)
- Ogni editor deve avere un campo nascosto id.
- Se id > 0 → modifica record esistente, se id = 0 → nuovo inserimento.
- Controller e Action gestiscono entrambi i casi.

## 7. Struttura delle View
- Il form HTML va nella funzione Client() della View.
- Il JS di supporto (es. invio dati) va nella funzione Server() della View.

**Esempio popolamento $provincia:**
```php
// Server
$provincia = \Code\ObjectFromQuery::GetProvince();
if ($provincia)
    \Common\State::WindowWrite("Id", (string)$provincia->Id);
// Client
$provincia = \Model\Province::GetItemById((int)\Common\State::WindowRead("Id"));
```

**Esempio form:**
```php
<form id="formProvincia" onsubmit="return false;">
    <input type="hidden" name="id" id="id" value="<?= $provincia->Id ?>" />
    <div class="mb-3">
        <label for="Titolo" class="form-label">Nome Provincia</label>
        <input type="text" class="form-control" id="Titolo" name="Titolo"
               value="<?= \Common\State::WindowRead("Titolo", $provincia ? $provincia->Titolo : "") ?>" />
    </div>
    <button type="button" class="btn btn-primary" onclick="inviaProvincia()">Salva</button>
</form>
```

**Esempio JS invio:**
```javascript
function inviaProvincia() {
    TempWriteAllId();
    Action("Province", "Inserisci", function() {
        let message = TempRead("message");
        if (message !== '') TempReadAllId(message);
        else { alert("Provincia inserita con successo!"); ReloadViewAll(); }
    });
}
```

// Fine backup

